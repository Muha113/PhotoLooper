@{
    ViewData["Title"] = "Photo";
    Layout = "_Layout";
}

@model PostCollector

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta id="viewport" name="viewport" content="width=320; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" />
    <style>
        /*#testim {
            top: 100px;
            left: 100px;
            bottom: 0; right: 0;
        }*/
    </style>
    <script src="~/scripts/jquery-1.10.2.js"></script>
    <script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
</head>

<body>
    @*<section class="main clearfix">*@
    <div class="main clearfix position-relative">
        <div class="work">
            <img src=@Model.Post.Path class="media" alt="" />
            @*<img src="~/images/work1.jpg" class="media" alt="" />*@
            <div class="caption">
                <div class="work_title">
                    <h1></h1>
                </div>
            </div>
        </div>
        <div class="row-space">
            <form action="/Home/TypeComment" data-ajax="true" data-ajax-mode="replace" data-ajax-update="#results" id="form0" method="post">
                <div class="wrap-input100 position-relative">
                    <input type="text" size="40" name="com" id="message" />
                    <input type="hidden" name="pId" value=@Model.Post.Id />
                    <input type="submit" id="sendBtn" @*icon="~/images/send.ico"*@ />
                </div>
            </form>
            @if (Model.Comments.Count != 0)
            {
                @foreach (var x in Model.Comments)
                {
                    <div id="results">
                        <a href="~/Home/Profile?id=@x.UserId">@ViewBag.context.GetUserCollector(x.UserId).User.NickName : </a>
                        <a>@x.comment</a>
                    </div>
                }
            }
            <div>
                <span id="commentUser"></span>
                <a id="commentPost"></a>
            </div>
            <script src="~/js/signalr.min.js"></script>
            <script>
                //Html.Hidden("messg", "a");
                const hubConnection = new signalR.HubConnectionBuilder()
                    .withUrl("/HuHub")
                    .configureLogging(signalR.LogLevel.Information)
                    .build();

                hubConnection.on("Send", function (data) {
                    let elem = document.createElement("p");
                    elem.appendChild(document.createTextNode(data));
                    let firstElem = document.getElementById("commentPost").firstChild;
                    document.getElementById("commentPost").insertBefore(elem, firstElem);
                    //function CreateComment(userName, ) {
                    //$.ajax({
                    //    url: "/HuHub",
                    //    contentType: "application/json",

                    //    method: "POST",
                    //    data: JSON.stringify({
                    //        name: userName,
                    //        age: parseInt(userAge, 10)
                    //    }),
                    //    success: function (user) {
                    //        reset();
                    //            $("table tbody").append(row(user));
                    //    }
                    //    })
                    //}
                    //CreateComment()
                });

                hubConnection.on("Receive", function (data) {

                    //alert(data);
                    let elem = document.createElement("p");
                    elem.appendChild(document.createTextNode(data));
                    let firstElem = document.getElementById("commentPost").firstChild;
                    document.getElementById("commentPost").insertBefore(elem, firstElem);
                });

                document.getElementById("sendBtn").addEventListener("click", function (e) {
                    //alert("Жопа");
                    let message = document.getElementById("message").value;
                    hubConnection.invoke("Send", "@Model.Post.Id", message);

                });

                hubConnection.start().then(() => {
                    hubConnection.invoke("JoinGroup", "@Model.Post.Id").catch(err => console.error(err.toString()));
                });
            </script>
            @*<span>@Model.Post.DateTime</span>*@
        </div>
    </div>
    @*</form>*@
    @*</section>*@<!-- end main -->
</body>
</html>

